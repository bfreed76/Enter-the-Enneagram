{"version":3,"sources":["enneagram.png","Home.js","Components/Instructions.js","Components/Questions.js","Containers/QuestionsContainer.js","Containers/ScrollToTop.js","Components/ResultsChart.js","Components/ResultsTable.js","Components/Footer.js","Components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["App","handleClick","className","id","src","enneagram","alt","to","Component","Instructions","style","fontSize","href","Questions","question","nextQuestions","text","name","value","onClick","e","QuestionsContainer","state","questions","startingIndex","initialResults","fetchQuestions","fetch","then","res","json","questionsArr","setState","renderTwoQuestions","twoQuestions","slice","processResults","prevState","target","finished","props","history","push","renderResults","resultsToState","this","renderQuestions","map","ScrollToTop","prevProps","location","pathname","window","scrollTo","React","withRouter","ResultsChart","data","labels","Object","keys","countedResults","datasets","label","fill","backgroundColor","borderColor","Footer","Results","finishedCounting","resultsCount","Array","from","resultsObj","result","includes","results","StrictMode","exact","path","component","Home","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.34e6a90a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/enneagram.0d2e82b5.png\";","// import Instructions from './Components/Instructions';\nimport enneagram from \"./enneagram.png\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\n\nclass App extends Component {\n  handleClick = () => {};\n\n  render() {\n    //? INTRO TEXT WITH LINK\n    return (\n      <div className='App'>\n        <h1>Welcome to the Enneagram</h1>\n        <div className='textbox'>\n          <p>\n            The Enneagram is a model of the human psyche that describes how people interact with the\n            world. It uses behavioral patterns to classify nine interconnected personality types.\n            Each type is defined by a particular core belief that anchors your deepest motivations\n            and fears, and shapes your woldview.\n          </p>\n          <p>\n            Understanding your Enneagram type (enneatype) can help you better understand your own\n            attitudes and habits, and improve your performance under stress. Knowing others'\n            enneatypes can provide a foundation for building compassion and empathy.\n          </p>\n          <img id='enne1' src={enneagram} alt='enneagram symbol'></img>\n          <p>\n            Identify your enneatype in about ten minutes with this quiz, which uses the same\n            questions approved by the Enneagram Institute. Once you finish, a description of your\n            primary personality type will be given with links for futher exploration.\n          </p>\n          <button className='button'>\n            <Link to='/Instructions' className='links'>\n              Instructions\n            </Link>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../index.css\";\n\nclass Instructions extends Component {\n  render() {\n    //? INSTRUCTIONS WITH LINKS\n\n    return (\n      <div className='App'>\n        <h1>Instructions</h1>\n        <div className='textbox'>\n          <p>\n            You will be presented with 36 sets of two statements. Selected the statement that is{\" \"}\n            <em>more</em> true of you <em>most</em> of the time. If you have difficulty deciding\n            which better describes you, select which statement most accurately reflects your general\n            behavior and attitude in the past.\n          </p>\n          <ul className='list'>\n            Tips:\n            <li>Do not overthink the questions, go with your gut.</li>\n            <li>\n              This indicator does not give an indication of how healthy or unhealthy someone is so\n              answer honestly. You name and score will never be shared or made public.\n            </li>\n            <li>\n              Keep in mind that your answers should be based on actual behavior and reactions, not\n              about occasional subjective, private feelings.\n            </li>\n            <li>\n              If you are unable to determine your personality type because you score similarly for\n              two or more personality types, it may be helpful to discuss your results with a\n              friend, partner or family member.\n            </li>\n          </ul>\n          <br></br>\n          <br></br>\n          <button className='button'>\n            <Link to='/questionscontainer' className='links'>\n              Quiz\n            </Link>\n          </button>\n          <hr></hr>\n          <p style={{ fontSize: \"80%\" }}>\n            Note: This 36-question indicator is an abbreviated version of the 144-question\n            Riso-Hudson Enneagram Type Indicator personality test. This full version of this test\n            may give you different results. For more information and to take the full test, visit{\" \"}\n            <a href='https://tests.enneagraminstitute.com/' className='blackLink'>\n              the Enneagram Institute.\n            </a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;\n","import React from \"react\";\nimport \"../index.css\";\n\nconst Questions = ({ question, nextQuestions, id }) => {\n  //? QUESTION CARD\n\n  return (\n    <div id={id}>\n      <h2>{question.text}</h2>\n      <button\n        name='nextButton'\n        className='button'\n        value={question.value}\n        onClick={(e) => nextQuestions(e)}>\n        Next\n      </button>\n      <hr className='hr'></hr>\n    </div>\n  );\n};\n\nexport default Questions;\n","import React, { Component } from \"react\";\nimport Questions from \"../Components/Questions\";\nimport \"../index.css\";\n\nclass QuestionsContainer extends Component {\n  state = {\n    questions: [],\n    startingIndex: 0,\n    initialResults: [],\n  };\n\n\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n\n  //? GETS QUESTION ARRAY\n  fetchQuestions = () => {\n    fetch(\"http://localhost:3001/questions\")\n      .then((res) => res.json())\n      .then((questionsArr) => {\n        this.setState({\n          questions: questionsArr,\n        });\n      });\n  };\n\n  //? SLICES FIRST SET OF TWO QUESTIONS, KILLS PROCESS WHEN FINISHED\n  renderTwoQuestions = () => {\n    const { questions, startingIndex } = this.state;\n    const twoQuestions = questions.slice(startingIndex, startingIndex + 2);\n    return startingIndex >= 6 ? this.processResults() : twoQuestions;\n    // 72 total questions\n  };\n\n  //? COUNTER FOR QUESTION SETS\n  nextQuestions = (e) => {\n    this.setState((prevState) => {\n      return {\n        startingIndex: prevState.startingIndex + 2,\n        initialResults: [...this.state.initialResults, e.target.value],\n      };\n    });\n    this.renderTwoQuestions();\n  };\n\n  //? NAVIGATES TO RESULTS COMPONENT WHEN FINISHED\n  processResults = () => {\n    this.finished = true;\n    this.props.history.push(\"/results\");\n    return [];\n  };\n\n  //? SENDS RESULTS TO APP.JS WHEN FINISHED\n  renderResults = () => {\n    this.props.resultsToState(this.state.initialResults);\n  };\n\n  render() {\n    let renderQuestions = this.renderTwoQuestions().map((question) => (\n      <Questions question={question} id={question.id} nextQuestions={this.nextQuestions} />\n    ));\n    return (\n      <div className='App'>\n        <br></br>\n        <h1>Select One</h1>\n        {this.finished ? this.renderResults() : renderQuestions}\n      </div>\n    );\n  }\n}\n\nexport default QuestionsContainer;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {             //? ENABLES SCROLL TO TOP FEATURE\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React, { Component } from \"react\";\n// import React from 'react'\nimport \"../index.css\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass ResultsChart extends Component {\n  \n  //? DISPLAYS CHART\n  data = {\n    labels: Object.keys(this.props.countedResults),\n    datasets: [\n      {\n        label: \"Enneatype\",\n        data: this.props.countedResults,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.8)\",\n        borderColor: \"rgba(75,192,192,1)\",\n      },\n    ],\n  };\n\n  render() {\n    return (\n      <div>\n        <hr></hr>\n        <Bar data={this.data} />\n        <hr></hr>\n      </div>\n    );\n  }\n}\n\nexport default ResultsChart;\n","import React from \"react\";\nimport \"../index.css\";\n\nexport default function App() {\n\n  //? DISPLAYS RESULTS TABLE\n  return (\n    <div className='table'>\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Enneatype Descriptions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className='typeLetter'>a: </td>\n            <td>\n              <strong>The Peacemaker:</strong> The Easygoing, Self-Effacing Type: Receptive,\n              Reassuring, Agreeable, and Complacent.{\" \"}\n              <a href='https://www.enneagraminstitute.com/type-9'>more...</a>\n            </td>\n          </tr>\n          <tr>\n            <td className='typeLetter'>b: </td>\n            <td>\n              <strong>The Loyalist:</strong> The Committed, Security-Oriented Type: Engaging,\n              Responsible, Anxious, and Suspicious.{\" \"}\n              <a href='https://www.enneagraminstitute.com/type-6'>more...</a>\n            </td>\n          </tr>\n          <tr>\n            <td className='typeLetter'>c: </td>\n            <td>\n              <strong>The Achiever:</strong> The Success-Oriented, Pragmatic Type: Adaptive,\n              Excelling, Driven, and Image-Conscious.{\" \"}\n              <a href='https://www.enneagraminstitute.com/type-3'>more...</a>\n            </td>\n          </tr>\n          <td className='typeLetter'>d: </td>\n          <td>\n            <strong>The Reformer:</strong> The Rational, Idealistic Type: Principled, Purposeful,\n            Self-Controlled, and Perfectionistic.{\" \"}\n            <a href='https://www.enneagraminstitute.com/type-1'>more...</a>\n          </td>\n          <tr>\n            <td className='typeLetter'>e: </td>\n            <td>\n              <strong>The Individualist:</strong> The Sensitive, Withdrawn Type: Expressive,\n              Dramatic, Self-Absorbed, and Temperamental.{\" \"}\n              <a href='https://www.enneagraminstitute.com/type-4'>more...</a>\n            </td>\n          </tr>\n          <tr>\n            <td className='typeLetter'>f: </td>\n            <td>\n              <strong>The Helper:</strong> The Caring, Interpersonal Type: Demonstrative, Generous,\n              People-Pleasing, and Possessive.{\" \"}\n              <a href='https://www.enneagraminstitute.com/type-2'>more...</a>\n            </td>\n          </tr>\n          <tr>\n            <td className='typeLetter'>g: </td>\n            <td>\n              <strong>The Challenger:</strong> The Powerful, Dominating Type: Self-Confident,\n              Decisive, Willful, and Confrontational.{\" \"}\n              <a href='https://www.enneagraminstitute.com/type-8'>more...</a>\n            </td>\n          </tr>\n          <tr>\n            <td className='typeLetter'>h: </td>\n            <td>\n              <strong>The Investigator:</strong> The Intense, Cerebral Type: Perceptive, Innovative,\n              Secretive, and Isolated.{\" \"}\n              <a href='https://www.enneagraminstitute.com/type-5'>more...</a>\n            </td>\n          </tr>\n          <tr>\n            <td className='typeLetter'>i: </td>\n            <td>\n              <strong>The Enthusiast:</strong> The Busy, Fun-Loving Type: Spontaneous, Versatile,\n              Distractible, and Scattered.{\" \"}\n              <a href='https://www.enneagraminstitute.com/type-7'>more...</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../index.css\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <small>\n        Created by Brinton Reed, Flatiron School Software Engineering Program. Powered by React and JSON Server.{\" \"}\n      </small>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport ResultsChart from \"./ResultsChart\";\nimport ResultsTable from \"./ResultsTable\";\nimport Footer from \"./Footer\";\nimport \"../index.css\";\n\nclass Results extends Component {\n  state = {\n    countedResults: {},\n    finishedCounting: false,\n  };\n\n  //? COUNTS NUMBER OF RESULTS AND CREATES OBJECT\n  resultsCount = () => {\n    let initialResults = Array.from(this.props.initialResults);\n    const resultsObj = {};\n    if (!!initialResults) {\n      initialResults.map((result) => {\n        Object.keys(resultsObj).includes(result)\n          ? (resultsObj[result] += 1)\n          : (resultsObj[result] = 1);\n      });\n      this.setState({\n        countedResults: resultsObj,\n        finishedCounting: true,\n      });\n    }\n  };\n\n  // //? (FOR FUTURE DEVELOPMENT!) POSTS NAME AND SCORE TO JSON SERVER\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   let name = e.target.firstChild.value;\n  //   let request = {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify({\n  //       id: \"\",\n  //       name: name,\n  //       results: this.state.countedResults,\n  //     }),\n  //   };\n  //   fetch(\"http://localhost:3001/results\", request)\n  //     .then((response) => response.json())\n  //     .then((data) => console.log(\"POST\", data));\n  // };\n\n  //? DISPLAYS RESULTS AND HOLDS POST FORM\n  render() {\n    return (\n      <div id='results'>\n        <div className='row'>\n          <div className='column'>\n            <h1>Your Results</h1>\n          </div>\n          <div className='column'>\n            {/* <form className='form' onSubmit={this.handleSubmit}>\n              <input type='text' placeholder='Your Name' style={{ fontSize: 20 }}></input>\n              <button className='button' style={{ fontSize: 18 }}>\n                Save Your Score\n              </button>\n            </form> */}\n          </div>\n        </div>\n        <div style={{ backgroundColor: \"white\" }}>\n          {this.state.finishedCounting === false ? (\n            this.resultsCount()\n          ) : (\n            <ResultsChart className='chart' countedResults={this.state.countedResults} />\n          )}\n        </div>\n        <ResultsTable />\n        <p>\n          For more information on the Enneagram, your Enneatype, or to take the full 144-question\n          Riso-Hudson Enneagram Type Indicator, click{\" \"}\n          <a className='blackLink' href='https://www.enneagraminstitute.com/'>\n            here.\n          </a>\n        </p>\n        <hr></hr>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","import \"./index.css\";\nimport React, { Component } from \"react\";\nimport Home from \"./Home\";\nimport Instructions from \"./Components/Instructions\";\nimport QuestionsContainer from \"./Containers/QuestionsContainer\";\nimport ScrollToTop from \"./Containers/ScrollToTop\";\nimport Questions from \"./Components/Questions\";\nimport Results from \"./Components/Results\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    initialResults: {},\n  };\n\n  //? INITIAL RESULTS FROM QUESTIONSCONTAINER TO RESULTS\n  resultsToState = (results) => {\n    this.setState({\n      initialResults: results,\n    });\n  };\n\n  //? NAVBAR\n  render() {\n    return (\n      <React.StrictMode>\n        <Router>\n          <ScrollToTop />\n          <div>\n            <ul>\n              <li className='navbar'>\n                <Link to='/' className='links'>\n                  Home{\" \"}\n                </Link>\n              </li>\n              <li className='navbar'>\n                <Link to='instructions' className='links'>\n                  | Instructions{\" \"}\n                </Link>\n              </li>\n              <li className='navbar'>\n                <Link to='questionscontainer' className='links'>\n                  | Quiz{\" \"}\n                </Link>\n              </li>\n              <li className='navbar'>\n                <Link to='results' className='links'>\n                  | Results{\" \"}\n                </Link>\n              </li>\n            </ul>\n            <hr />\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route exact path='/instructions' component={Instructions} />\n              <Route exact path='/questions' component={Questions} />\n              <Route\n                exact\n                path='/results'\n                render={(routeProps) => (\n                  <Results {...routeProps} initialResults={this.state.initialResults} />\n                )}\n              />\n              <Route\n                exact\n                path='/questionscontainer'\n                render={(routeProps) => (\n                  <QuestionsContainer {...routeProps} resultsToState={this.resultsToState} />\n                )}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </React.StrictMode>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}